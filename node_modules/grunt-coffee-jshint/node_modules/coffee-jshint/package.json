{
  "name": "coffee-jshint",
  "version": "0.0.6",
  "description": "Checks CoffeeScript source for errors using JSHint",
  "engines": {
    "node": ">=0.8.x"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/Clever/coffee-jshint.git"
  },
  "bin": {
    "coffee-jshint": "./cli.js"
  },
  "scripts": {
    "prepublish": "make"
  },
  "license": "BSD",
  "dependencies": {
    "coffee-script": "~1.6.3",
    "jshint": "~2.1.4",
    "optimist": "~0.6.0",
    "underscore": "~1.4.4"
  },
  "readme": "# Coffee->JSHint\n\nRuns your CoffeeScript source through [JSHint](http://www.jshint.com/) to check for errors.\n\n## Installation\n\n    npm install coffee-jshint -g\n\n## Usage\n\nTo check some files:\n\n    coffee-jshint file1.coffee file2.coffee ...\n\n### Options\n\nJSHint takes [a bunch of options](http://www.jshint.com/docs/#options) that tell it various rules to enforce or relax. Some of these don't make much sense to check for JS generated by the CoffeeScript compiler, so by default these options are turned on:\n\n- **undef:** warns about use of undeclared variables\n- **eqnull:** suppresses warnings about `== null`, which CoffeeScript uses in its generated JS\n- **expr:** suppresses warnings about expressions in unexpected positions, which can only occur in generated JS when the CoffeeScript compiler does it on purpose\n- **shadow:** suppresses warnings about variable shadowing, which is fine since CoffeeScript has sane scoping rules and generates safely scoped JS that uses shadowed variables\n- **sub:** suppresses warnings about using bracket object lookup notation (`obj['field']`) when you could use dot notation (`obj.field`) since we're grown ups and can make our own decisions about what lookup syntax is best\n\nTo turn on more options, you can use the `--options` or `-o` flag:\n\n    coffee-jshint -o trailing,browser,sub file1.coffee file2.coffee ...\n\nIf you really must turn off some of the default options, use the `--default-options-off` flag (you can always use `--options` to turn some back on):\n\n    coffee-jshint --default-options-off --options undef,eqnull ...\n\n### Globals\n\nYou'll probably get a lot of complaints from Coffee->JSHint about undefined global variables like `console`, `$`, or `require`. Depending on where you're running your code, you might want to allow a few global variables. One easy way to handle this is to use JSHint's built in [environment options](http://www.jshint.com/docs/#environments).\n\nFor instance, if you're running your code using Node.js, then you'll want to turn on the `node` option. It works like any other option:\n\n    coffee-jshint -o node ...\n\nIf you have some globals that aren't covered by any of environments, well then you should probably check yo'self before you wreck yo'self. But if you really want to turn off warnings for some global variables, Coffee->JSHint supports it using the `--globals` or `-g` option. One use case is when using [Mocha](http://visionmedia.github.io/mocha/), a testing library:\n\n    coffee-jshint -o node --globals describe,it ...\n\n### Shell scripting\n\nCoffee->JSHint plays nicely with your favorite Unix utilities. If you want to recursively search all the files in a directory, try piping in the results of a `find`. Here's an example that also uses `grep` to filter out files in `node_modules/`:\n\n    find . -type f -path \"*.coffee\" | grep -v \"node_modules/\" | xargs coffee-jshint\n\n### Git hook\n\nTo use Coffee->JSHint as a git pre-commit hook to check changed files before you commit, put something like this in `.git/hooks/pre-commit`:\n\n```bash\ngit diff --staged --name-only | xargs coffee-jshint\nif [[ $? -ne 0 ]]; then\n    echo 'WARNING: You are about to commit files with coffee-jshint warnings'\n    exit 1\nfi\n```\n\nThis will take all the files you plan to commit changes to, run them through `coffee-jshint`, and exit with status code `1` if there are any warnings (which it will also print out). If there are warnings, the commit will be aborted, but you can always do `git commit --no-verify` to bypass the hook.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/Clever/coffee-jshint/issues"
  },
  "homepage": "https://github.com/Clever/coffee-jshint",
  "_id": "coffee-jshint@0.0.6",
  "dist": {
    "shasum": "6011325c3c3ddbe996b24589c24a70b66a1f2d09"
  },
  "_from": "coffee-jshint@0.0.6",
  "_resolved": "https://registry.npmjs.org/coffee-jshint/-/coffee-jshint-0.0.6.tgz"
}
